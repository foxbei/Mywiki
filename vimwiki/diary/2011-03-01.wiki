%toc
==不需要询问密码的权限授予==

根据您系统的验证机制设置，程序‘nautilus 'file:///root'’以用户 root 的权限启动而不需要询问密码。

这可能是因为您被许可以用户 root 的身份运行指定的程序而不需要密码，或是因为密码已被缓存。

这不是一个问题报告，只是一个简单的通知以确保您知道它。

==vimwiki==
Personal Wiki for Vim
http://code.google.com/p/vimwiki/

安装vimwiki

http://vimwiki.googlecode.com/files/vimwiki-1-1-1-vba.zip

用GVim打开解压缩后的vimwiki-1-1-1.vba,执行以下语句：
{{{
:so %
}}}

=VIM=
Vim是从vi发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和Emacs并列成为类Unix系统用户最喜欢的编辑器。
==Vim历史==
* 1991年发布Vim 1.14版被"Fred Fish Disk #591"这个Amiga用的免费软体集所收录
* 1992年1.22版本的Vim被移植到了UNIX和MS-DOS上
* 1994年的3.0版本加入了多视窗编辑模式（分割视窗）
* 1996年发布的Vim 4.0是第一个利用图型介面（GUI）的版本
* 1998年5.0版本的Vim加入了highlight（语法高亮）功能
* 2008年8月发布的Vim 7.2，合并了Vim 7.1以来的所有修正补丁，并且加入了脚本的浮点数支持
* 2010年8月发布的Vim 7.3，这个版本除了包含最新修正的补丁之外，还加入了“永久撤销”、“Blowfish算法加密”、“文本隐藏”和“Lua以及Python3的接口

==协议==
目前, VIM是按照GPL协议发布的开源软件。它的协议中包含一些慈善条款，建议用户向荷兰ICCF捐款，用于帮助乌干达的艾滋病患者. VIM启动时会显示Help poor children in Uganda!的字样，在中文版本中则是帮助乌干达的可怜儿童!

==学习曲线==
对于大多数用户来说，Vim有着一个比较陡峭的学习曲线。这意味着开始学习的时候可能会进展缓慢，但是一旦掌握一些基本操作之后，能大幅度提高编辑效率。为了帮助学习，Vim为初学者准备了Vim教学。通常可以在Unix系统命令行下输入 *vimtutor* 或者点击Windows系统桌面上的Vim教学图标进入。在Vim用户手册 中更加详细的描述了Vim的基础和进阶功能。可以在Vim中输入 *":help user-manual"* 进入用户手册。手册除了原始的英文版本之外，也被志愿者翻译成了各国文字，也包括了中文。
新用户也应该学习Vim的帮助系统。可以在Vim中输入不带参数的"help"来阅读主帮助文件

==模式==
===普通模式===
在普通模式中，用户可以执行一般的编辑器命令，比如移动光标，删除文本等等。这也是Vim启动后的默认模式。这正好和许多新用户期待的操作方式相反（大多数编辑器默认模式为插入模式）。
Vim强大的编辑能力中很大部分是来自于其普通模式命令。普通模式命令往往需要一个操作符结尾。例如普通模式命令 *"dd"* 删除当前行，但是第一个"d"的后面可以跟另外的移动命令来代替第二个"d"，比如用移动到下一行的"j"键就可以删除当前行和下一行。另外还可以指定命令重复次数，"2dd"（重复"dd"两次），和"dj"的效果是一样的。用户学习了各种各样的文本间移动／跳转的命令和其他的普通模式的编辑命令，并且能够灵活组合使用的话，能够比那些没有模式的编辑器更加高效的进行文本编辑。
在普通模式中，有很多方法可以进入插入模式。比较普通的方式是按 *"a"* （append／追加）键或者 *"i"* （insert／插入）键。
====插入模式====
在这个模式中，大多数按键都会向文本缓冲中插入文本。大多数新用户希望文本编辑器编辑过程中一直保持这个模式。
在插入模式中，可以按ESC键回到普通模式。
====选择模式====
这个模式和无模式编辑器的行为比较相似（Windows标准文本控件的方式）。这个模式中，可以用鼠标或者光标键高亮选择文本，不过输入任何字符的话，Vim会用这个字符替换选择的高亮文本块，并且自动进入插入模式。
====命令行模式====
在命令行模式中可以输入会被解释成并执行的文本。例如执行命令（":"键），搜索（"/"和"?"键）或者过滤命令（"!"键）。在命令执行之后，Vim返回到命令行模式之前的模式，通常是普通模式。
====Ex模式====
这和命令行模式比较相似，在使用":visual"命令离开Ex模式前，可以一次执行多条命令。
===演生模式===
这个派生模式指普通模式中，执行一个操作命令后Vim等待一个"动作"来完成这个命令。Vim也支持在操作符等待模式中使用"文本对象"作为动作，包括"aw"一个单词（a word）、"as"一个句子（a sentence）、"ap"一个段落（a paragraph）等等。
比如，在普通模式下"d2as"删除当前和下一个句子。在可视模式下"apU"把当前段落所有字母大写。
====插入普通模式====
这个模式是在插入模式下按下ctrl-o键的时候进入。这个时候暂时进入普通模式，执行完一个命令之后，Vim返回插入模式
====插入可视模式====
这个模式是在插入模式下按下ctrl-o键并且开始一个可视选择的时候开始。在可视区域选择取消的时候，Vim返回插入模式。
====插入选择模式====
通常这个模式由插入模式下鼠标拖拽或者shift方向键来进入。当选择区域取消的时候，Vim返回插入模式。
====替换模式====
这是一个特殊的插入模式，在这个模式中可以做和插入模式一样的操作，但是每个输入的字符都会覆盖文本缓冲中已经存在的字符。在普通模式下按"R"键进入。
====其他====
==== Evim ====
Evim是一个特殊的GUI模式用来尽量的表现的和"无模式"编辑器一样。编辑器自动进入并且停留在插入模式，用户只能通过菜单、鼠标和键盘控制键来对文本进行操作。可以在命令行下输入"evim"或者"vim -y"进入。在Windows下，通常也可以点击桌面上Evim的图标。
=Gentoo Gnome安装=
{{{
emerge gnome-utils gnome-system-tools file-roller gnome-system-monitor pmount
}}}
pmount （gnome下自动挂载）以实现你的移动设备(usb)自动挂载。
{{{
emerge gnome-media gnome-audio esound alsamixergui gnome-applets
}}}
* esound是gnome下的软件混音器。（安装后在gnome的桌面--首选项-->音效里面选择 启用软件混音器，重启。）
* gnome-utils是一些小工具（如：抓屏 printscreen键）
* gnome-system-tools是一些管理工具 桌面-->系统管理里面的。
* file-roller是归档管理器。
* gnome-system-monitor是任务管理器。
* gnome-applets声音调节按钮在面板等
==PDF阅读软件==
{{{
emerge app-text/foxitreader
}}}
{{{
$ git config --global user.name foxbei
$ git config --global user.email foxbei@163.com
}}}
